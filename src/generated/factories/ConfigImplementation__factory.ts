/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConfigImplementation,
  ConfigImplementationInterface,
} from "../ConfigImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldGatewayAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newGatewayAddress",
        type: "address",
      },
    ],
    name: "GatewayAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldMarketplaceAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newMarketplaceAddress",
        type: "address",
      },
    ],
    name: "MarketplaceAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMarketplaceFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMarketplaceFeeDecimals",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMarketplaceFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMarketplaceFeeDecimals",
        type: "uint256",
      },
    ],
    name: "MarketplaceFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "gatewayAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gatewayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketplaceAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_marketplaceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketplaceFeeDecimals",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplaceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplaceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplaceFeeDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGatewayAddress",
        type: "address",
      },
    ],
    name: "updateGatewayAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMarketplaceAddress",
        type: "address",
      },
    ],
    name: "updateMarketplaceAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMarketplaceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMarketplaceFeeDecimals",
        type: "uint256",
      },
    ],
    name: "updateMarketplaceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610760806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c80630d8e6e2c146100a95780632658f65f146100bf57806365cce3f3146100d45780636a166964146100dd578063715018a6146100e65780638b851b95146100ee5780638da5cb5b14610119578063ccc7759914610121578063daa17f4914610134578063e4ace31a14610147578063eb990c591461015a578063f2fde38b1461016d575b600080fd5b60015b6040519081526020015b60405180910390f35b6100d26100cd36600461066f565b610180565b005b6100ac609a5481565b6100ac60995481565b6100d2610218565b609754610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b610101610253565b6100d261012f36600461060d565b610262565b609854610101906001600160a01b031681565b6100d261015536600461060d565b6102f0565b6100d261016836600461062e565b610372565b6100d261017b36600461060d565b610471565b33610189610253565b6001600160a01b0316146101b85760405162461bcd60e51b81526004016101af906106aa565b60405180910390fd5b60998054609a8054928590558390556040805182815260208101849052908101859052606081018490529091907f94d88256301ec083e1f1cd7374bc5cdb6e392d8305a2343183b01211e5155af69060800160405180910390a150505050565b33610221610253565b6001600160a01b0316146102475760405162461bcd60e51b81526004016101af906106aa565b6102516000610511565b565b6033546001600160a01b031690565b3361026b610253565b6001600160a01b0316146102915760405162461bcd60e51b81526004016101af906106aa565b609780546001600160a01b038381166001600160a01b03198316179092556040519116907fd4c520edf96d8835d69a539bded1b9d2b881f5e78ee3a66bb1d13e12013b5241906102e49083908590610690565b60405180910390a15050565b336102f9610253565b6001600160a01b03161461031f5760405162461bcd60e51b81526004016101af906106aa565b609880546001600160a01b038381166001600160a01b03198316179092556040519116907f920f4de0e7427ce5cf5551817fae8bbb29975314ec846a00f7a363831f0e5012906102e49083908590610690565b600054610100900460ff1661038d5760005460ff1615610391565b303b155b6103f45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101af565b600054610100900460ff16158015610416576000805461ffff19166101011790555b61041e610563565b609780546001600160a01b038088166001600160a01b03199283161790925560988054928716929091169190911790556099839055609a829055801561046a576000805461ff00191690555b5050505050565b3361047a610253565b6001600160a01b0316146104a05760405162461bcd60e51b81526004016101af906106aa565b6001600160a01b0381166105055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101af565b61050e81610511565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661058a5760405162461bcd60e51b81526004016101af906106df565b61059261059a565b6102516105c1565b600054610100900460ff166102515760405162461bcd60e51b81526004016101af906106df565b600054610100900460ff166105e85760405162461bcd60e51b81526004016101af906106df565b61025133610511565b80356001600160a01b038116811461060857600080fd5b919050565b60006020828403121561061e578081fd5b610627826105f1565b9392505050565b60008060008060808587031215610643578283fd5b61064c856105f1565b935061065a602086016105f1565b93969395505050506040820135916060013590565b60008060408385031215610681578182fd5b50508035926020909101359150565b6001600160a01b0392831681529116602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122081f3704d22cf00fc354c75fb442e63d54d8d91487f5d5e4e091dd45a96917a1f64736f6c63430008040033";

export class ConfigImplementation__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConfigImplementation> {
    return super.deploy(overrides || {}) as Promise<ConfigImplementation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConfigImplementation {
    return super.attach(address) as ConfigImplementation;
  }
  connect(signer: Signer): ConfigImplementation__factory {
    return super.connect(signer) as ConfigImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigImplementationInterface {
    return new utils.Interface(_abi) as ConfigImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConfigImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConfigImplementation;
  }
}
