/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryImplementation,
  TreasuryImplementationInterface,
} from "../TreasuryImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b86806100206000396000f3fe6080604052600436106100645760003560e01c80630d8e6e2c14610070578063715018a6146100915780638129fc1c146100a85780638da5cb5b146100bd5780639db5dbe4146100ea578063a9059cbb1461010a578063f2fde38b1461012a57600080fd5b3661006b57005b600080fd5b34801561007c57600080fd5b50604051600181526020015b60405180910390f35b34801561009d57600080fd5b506100a661014a565b005b3480156100b457600080fd5b506100a661018e565b3480156100c957600080fd5b506100d2610257565b6040516001600160a01b039091168152602001610088565b3480156100f657600080fd5b506100a66101053660046109a5565b610266565b34801561011657600080fd5b506100a661012536600461095a565b610316565b34801561013657600080fd5b506100a661014536600461093e565b6103af565b33610153610257565b6001600160a01b0316146101825760405162461bcd60e51b815260040161017990610a34565b60405180910390fd5b61018c6000610448565b565b600054610100900460ff166101a95760005460ff16156101ad565b303b155b6102105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610179565b600054610100900460ff16158015610232576000805461ffff19166101011790555b61023a61049a565b6102426104d1565b8015610254576000805461ff00191690555b50565b6033546001600160a01b031690565b3361026f610257565b6001600160a01b0316146102955760405162461bcd60e51b815260040161017990610a34565b600260655414156102b85760405162461bcd60e51b815260040161017990610ab4565b60026065556102d16001600160a01b0384168383610500565b816001600160a01b0316836001600160a01b0316600080516020610b318339815191528360405161030491815260200190565b60405180910390a35050600160655550565b3361031f610257565b6001600160a01b0316146103455760405162461bcd60e51b815260040161017990610a34565b600260655414156103685760405162461bcd60e51b815260040161017990610ab4565b60026065556103778282610557565b6040518181526001600160a01b03831690600090600080516020610b318339815191529060200160405180910390a350506001606555565b336103b8610257565b6001600160a01b0316146103de5760405162461bcd60e51b815260040161017990610a34565b6001600160a01b0381166104435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610179565b610254815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166104c15760405162461bcd60e51b815260040161017990610a69565b6104c961066d565b61018c610694565b600054610100900460ff166104f85760405162461bcd60e51b815260040161017990610a69565b61018c6106c4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105529084906106f2565b505050565b804710156105a75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610179565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146105f4576040519150601f19603f3d011682016040523d82523d6000602084013e6105f9565b606091505b50509050806105525760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608401610179565b600054610100900460ff1661018c5760405162461bcd60e51b815260040161017990610a69565b600054610100900460ff166106bb5760405162461bcd60e51b815260040161017990610a69565b61018c33610448565b600054610100900460ff166106eb5760405162461bcd60e51b815260040161017990610a69565b6001606555565b6000610747826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c49092919063ffffffff16565b80519091501561055257808060200190518101906107659190610985565b6105525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610179565b60606107d384846000856107dd565b90505b9392505050565b60608247101561083e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610179565b843b61088c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610179565b600080866001600160a01b031685876040516108a891906109e5565b60006040518083038185875af1925050503d80600081146108e5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ea565b606091505b50915091506108fa828286610905565b979650505050505050565b606083156109145750816107d6565b8251156109245782518084602001fd5b8160405162461bcd60e51b81526004016101799190610a01565b60006020828403121561094f578081fd5b81356107d681610b1b565b6000806040838503121561096c578081fd5b823561097781610b1b565b946020939093013593505050565b600060208284031215610996578081fd5b815180151581146107d6578182fd5b6000806000606084860312156109b9578081fd5b83356109c481610b1b565b925060208401356109d481610b1b565b929592945050506040919091013590565b600082516109f7818460208701610aeb565b9190910192915050565b6020815260008251806020840152610a20816040850160208701610aeb565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60005b83811015610b06578181015183820152602001610aee565b83811115610b15576000848401525b50505050565b6001600160a01b038116811461025457600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204e7b50fbcdab76b5afd5c5429ec2edaa8e30bbf8fb208a00ff476935654b952a64736f6c63430008040033";

export class TreasuryImplementation__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryImplementation> {
    return super.deploy(overrides || {}) as Promise<TreasuryImplementation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TreasuryImplementation {
    return super.attach(address) as TreasuryImplementation;
  }
  connect(signer: Signer): TreasuryImplementation__factory {
    return super.connect(signer) as TreasuryImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryImplementationInterface {
    return new utils.Interface(_abi) as TreasuryImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasuryImplementation;
  }
}
