/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VestingImplementationV2,
  VestingImplementationV2Interface,
} from "../VestingImplementationV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "genesisAmount",
        type: "uint256",
      },
    ],
    name: "BeneficiaryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BeneficiaryClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_vestingAmount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_genesisAmounts",
        type: "uint256[]",
      },
    ],
    name: "addBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "uint256",
        name: "genesisAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
      {
        internalType: "enum VestingImplementationV2.State",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "beneficiaryListAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryListLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_vestingAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_genesisAmounts",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaryList",
        type: "address[]",
      },
    ],
    name: "lockBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaryList",
        type: "address[]",
      },
    ],
    name: "unlockBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newEndBlock",
        type: "uint256",
      },
    ],
    name: "updateEndBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e55760003560e01c80626f0231146100ea57806301567739146100ff578063083c63231461015057806348cd4cb11461016757806349fa8d34146101705780634a997eeb146101835780634e71d92d14610196578063715018a61461019e578063785393db146101a657806389554f17146101d15780638da5cb5b146101e45780639db5dbe4146101ec578063a9059cbb146101ff578063d04c41b614610212578063e12f3a6114610225578063eb0376b114610238578063f2fde38b14610240578063fc0c546a14610253575b600080fd5b6100fd6100f83660046116ba565b610266565b005b61013761010d3660046114b6565b609a6020526000908152604090208054600182015460028301546003909301549192909160ff1684565b60405161014794939291906117d8565b60405180910390f35b61015960995481565b604051908152602001610147565b61015960985481565b6100fd61017e366004611612565b6102a3565b6100fd61019136600461152f565b6103a2565b6100fd6103e1565b6100fd610593565b6101b96101b43660046116ba565b6105ce565b6040516001600160a01b039091168152602001610147565b6100fd6101df3660046114fd565b6105e1565b6101b9610740565b6100fd6101fa3660046115d2565b61074f565b6100fd61020d3660046114d2565b6107ff565b6100fd6102203660046114fd565b610898565b6101596102333660046114b6565b6109f2565b610159610acc565b6100fd61024e3660046114b6565b610add565b6097546101b9906001600160a01b031681565b3361026f610740565b6001600160a01b03161461029e5760405162461bcd60e51b815260040161029590611721565b60405180910390fd5b609955565b600054610100900460ff166102be5760005460ff16156102c2565b303b155b6103255760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610295565b600054610100900460ff16158015610347576000805461ffff19166101011790555b61034f610b7d565b610357610bb4565b609780546001600160a01b0319166001600160a01b03891617905560988690556099859055610387848484610be3565b8015610399576000805461ff00191690555b50505050505050565b336103ab610740565b6001600160a01b0316146103d15760405162461bcd60e51b815260040161029590611721565b6103dc838383610be3565b505050565b600260655414156104045760405162461bcd60e51b8152600401610295906117a1565b6002606555336000908152609a602052604090206001600382015460ff16600281111561044157634e487b7160e01b600052602160045260246000fd5b146104845760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642062656e656669636961727960681b6044820152606401610295565b60985443116104d55760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f7420636c61696d206265666f7265207374617274426c6f636b00006044820152606401610295565b60006104e0336109f2565b9050600081116105255760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152606401610295565b80826002016000828254610539919061186d565b9091555050609754610555906001600160a01b03163383610e9f565b60405181815233907f735e2ef7d759ed5edc5b5cfd70bd63f00eddd61e652119b1825287362957ad599060200160405180910390a250506001606555565b3361059c610740565b6001600160a01b0316146105c25760405162461bcd60e51b815260040161029590611721565b6105cc6000610ef1565b565b60006105db609b83610f43565b92915050565b336105ea610740565b6001600160a01b0316146106105760405162461bcd60e51b815260040161029590611721565b60005b815181101561073c576000609a600084848151811061064257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002090506001600281111561068d57634e487b7160e01b600052602160045260246000fd5b600382015460ff1660028111156106b457634e487b7160e01b600052602160045260246000fd5b14156107295760038101805460ff1916600217905582518390839081106106eb57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f8bbf1861fd29297756bc2ec1496a157359ea7fda5746df5233b4fc3e8124511860405160405180910390a25b508061073481611907565b915050610613565b5050565b6033546001600160a01b031690565b33610758610740565b6001600160a01b03161461077e5760405162461bcd60e51b815260040161029590611721565b600260655414156107a15760405162461bcd60e51b8152600401610295906117a1565b60026065556107ba6001600160a01b0384168383610e9f565b816001600160a01b0316836001600160a01b0316600080516020611964833981519152836040516107ed91815260200190565b60405180910390a35050600160655550565b33610808610740565b6001600160a01b03161461082e5760405162461bcd60e51b815260040161029590611721565b600260655414156108515760405162461bcd60e51b8152600401610295906117a1565b60026065556108608282610f56565b6040518181526001600160a01b038316906000906000805160206119648339815191529060200160405180910390a350506001606555565b336108a1610740565b6001600160a01b0316146108c75760405162461bcd60e51b815260040161029590611721565b60005b815181101561073c576000609a60008484815181106108f957634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020905060028081111561094357634e487b7160e01b600052602160045260246000fd5b600382015460ff16600281111561096a57634e487b7160e01b600052602160045260246000fd5b14156109df5760038101805460ff1916600117905582518390839081106109a157634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167fb84ab42066834057600f08f7bc7564111d6f5c12497b99f98d02346aed682a1460405160405180910390a25b50806109ea81611907565b9150506108ca565b6001600160a01b0381166000908152609a60205260408120600281015482908190610a2257505080546000610a3a565b8254600284015460009350610a3791906118c4565b90505b6099544310610a6457808360010154610a5391906118c4565b610a5d908361186d565b9150610ac4565b6000609854609954610a7691906118c4565b609854610a8390436118c4565b8560010154610a9291906118a5565b610a9c9190611885565b9050818111610aac576000610ab6565b610ab682826118c4565b610ac0908461186d565b9250505b509392505050565b6000610ad8609b61106c565b905090565b33610ae6610740565b6001600160a01b031614610b0c5760405162461bcd60e51b815260040161029590611721565b6001600160a01b038116610b715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610295565b610b7a81610ef1565b50565b600054610100900460ff16610ba45760405162461bcd60e51b815260040161029590611756565b610bac611076565b6105cc61109d565b600054610100900460ff16610bdb5760405162461bcd60e51b815260040161029590611756565b6105cc6110cd565b81518351148015610bf5575080518351145b610c3e5760405162461bcd60e51b815260206004820152601a602482015279092dcccdee4dac2e8d2dedc40c2e4d2e8f240dad2e6dac2e8c6d60331b6044820152606401610295565b60005b8351811015610e995760006040518060800160405280848481518110610c7757634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001858481518110610ca457634e487b7160e01b600052603260045260246000fd5b602002602001015181526020016000815260200160016002811115610cd957634e487b7160e01b600052602160045260246000fd5b815250905080609a6000878581518110610d0357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836002811115610d8157634e487b7160e01b600052602160045260246000fd5b0217905550905050610dc4858381518110610dac57634e487b7160e01b600052603260045260246000fd5b6020026020010151609b6110fb90919063ffffffff16565b50848281518110610de557634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f0786a211633682dd779567f71dd366c8e97f69c9893ef8fdfa9cd2414680c25b858481518110610e3757634e487b7160e01b600052603260045260246000fd5b6020026020010151858581518110610e5f57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051610e7e929190918252602082015260400190565b60405180910390a25080610e9181611907565b915050610c41565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103dc908490611110565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610f4f83836111e2565b9392505050565b80471015610fa65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610295565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ff3576040519150601f19603f3d011682016040523d82523d6000602084013e610ff8565b606091505b50509050806103dc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608401610295565b60006105db825490565b600054610100900460ff166105cc5760405162461bcd60e51b815260040161029590611756565b600054610100900460ff166110c45760405162461bcd60e51b815260040161029590611756565b6105cc33610ef1565b600054610100900460ff166110f45760405162461bcd60e51b815260040161029590611756565b6001606555565b6000610f4f836001600160a01b03841661121a565b6000611165826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112699092919063ffffffff16565b8051909150156103dc578080602001905181019061118391906115b2565b6103dc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610295565b600082600001828154811061120757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000818152600183016020526040812054611261575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105db565b5060006105db565b60606112788484600085611280565b949350505050565b6060824710156112e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610295565b843b61132f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610295565b600080866001600160a01b0316858760405161134b91906116d2565b60006040518083038185875af1925050503d8060008114611388576040519150601f19603f3d011682016040523d82523d6000602084013e61138d565b606091505b509150915061139d8282866113a8565b979650505050505050565b606083156113b7575081610f4f565b8251156113c75782518084602001fd5b8160405162461bcd60e51b815260040161029591906116ee565b600082601f8301126113f1578081fd5b813560206114066114018361184a565b61181a565b80838252828201915082860187848660051b8901011115611425578586fd5b855b8581101561144c57813561143a8161194e565b84529284019290840190600101611427565b5090979650505050505050565b600082601f830112611469578081fd5b813560206114796114018361184a565b80838252828201915082860187848660051b8901011115611498578586fd5b855b8581101561144c5781358452928401929084019060010161149a565b6000602082840312156114c7578081fd5b8135610f4f8161194e565b600080604083850312156114e4578081fd5b82356114ef8161194e565b946020939093013593505050565b60006020828403121561150e578081fd5b81356001600160401b03811115611523578182fd5b611278848285016113e1565b600080600060608486031215611543578081fd5b83356001600160401b0380821115611559578283fd5b611565878388016113e1565b9450602086013591508082111561157a578283fd5b61158687838801611459565b9350604086013591508082111561159b578283fd5b506115a886828701611459565b9150509250925092565b6000602082840312156115c3578081fd5b81518015158114610f4f578182fd5b6000806000606084860312156115e6578283fd5b83356115f18161194e565b925060208401356116018161194e565b929592945050506040919091013590565b60008060008060008060c0878903121561162a578182fd5b86356116358161194e565b9550602087013594506040870135935060608701356001600160401b038082111561165e578384fd5b61166a8a838b016113e1565b9450608089013591508082111561167f578384fd5b61168b8a838b01611459565b935060a08901359150808211156116a0578283fd5b506116ad89828a01611459565b9150509295509295509295565b6000602082840312156116cb578081fd5b5035919050565b600082516116e48184602087016118db565b9190910192915050565b602081526000825180602084015261170d8160408501602087016118db565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b8481526020810184905260408101839052608081016003831061180b57634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b604051601f8201601f191681016001600160401b038111828210171561184257611842611938565b604052919050565b60006001600160401b0382111561186357611863611938565b5060051b60200190565b6000821982111561188057611880611922565b500190565b6000826118a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118bf576118bf611922565b500290565b6000828210156118d6576118d6611922565b500390565b60005b838110156118f65781810151838201526020016118de565b83811115610e995750506000910152565b600060001982141561191b5761191b611922565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b7a57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204e59e08597d2586b766caedacbfa05202a0f04d8d34d85281310e15a0797313064736f6c63430008040033";

export class VestingImplementationV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingImplementationV2> {
    return super.deploy(overrides || {}) as Promise<VestingImplementationV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VestingImplementationV2 {
    return super.attach(address) as VestingImplementationV2;
  }
  connect(signer: Signer): VestingImplementationV2__factory {
    return super.connect(signer) as VestingImplementationV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingImplementationV2Interface {
    return new utils.Interface(_abi) as VestingImplementationV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingImplementationV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VestingImplementationV2;
  }
}
