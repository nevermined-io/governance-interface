/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VestingImplementation,
  VestingImplementationInterface,
} from "../VestingImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "genesisAmount",
        type: "uint256",
      },
    ],
    name: "BeneficiaryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BeneficiaryClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_vestingAmount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_genesisAmounts",
        type: "uint256[]",
      },
    ],
    name: "addBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "uint256",
        name: "genesisAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
      {
        internalType: "enum IVesting.State",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "beneficiaryListAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryListLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_vestingAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_genesisAmounts",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaryList",
        type: "address[]",
      },
    ],
    name: "lockBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaryList",
        type: "address[]",
      },
    ],
    name: "unlockBeneficiaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611964806100206000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806301567739146100e0578063083c63231461013157806348cd4cb11461014857806349fa8d34146101515780634a997eeb146101665780634e71d92d14610179578063715018a614610181578063785393db1461018957806389554f17146101b45780638da5cb5b146101c75780639db5dbe4146101cf578063a9059cbb146101e2578063d04c41b6146101f5578063e12f3a6114610208578063eb0376b11461021b578063f2fde38b14610223578063fc0c546a14610236575b600080fd5b6101186100ee366004611461565b609a6020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040516101289493929190611783565b60405180910390f35b61013a60995481565b604051908152602001610128565b61013a60985481565b61016461015f3660046115bd565b610249565b005b6101646101743660046114da565b61034d565b61016461038c565b61016461053e565b61019c610197366004611665565b610579565b6040516001600160a01b039091168152602001610128565b6101646101c23660046114a8565b61058c565b61019c6106eb565b6101646101dd36600461157d565b6106fa565b6101646101f036600461147d565b6107aa565b6101646102033660046114a8565b610843565b61013a610216366004611461565b61099d565b61013a610a77565b610164610231366004611461565b610a88565b60975461019c906001600160a01b031681565b600054610100900460ff166102645760005460ff1615610268565b303b155b6102d05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156102f2576000805461ffff19166101011790555b6102fa610b28565b610302610b5f565b609780546001600160a01b0319166001600160a01b03891617905560988690556099859055610332848484610b8e565b8015610344576000805461ff00191690555b50505050505050565b336103566106eb565b6001600160a01b03161461037c5760405162461bcd60e51b81526004016102c7906116cc565b610387838383610b8e565b505050565b600260655414156103af5760405162461bcd60e51b81526004016102c79061174c565b6002606555336000908152609a602052604090206001600382015460ff1660028111156103ec57634e487b7160e01b600052602160045260246000fd5b1461042f5760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642062656e656669636961727960681b60448201526064016102c7565b60985443116104805760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f7420636c61696d206265666f7265207374617274426c6f636b000060448201526064016102c7565b600061048b3361099d565b9050600081116104d05760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20636c61696d60801b60448201526064016102c7565b808260020160008282546104e49190611818565b9091555050609754610500906001600160a01b03163383610e4a565b60405181815233907f735e2ef7d759ed5edc5b5cfd70bd63f00eddd61e652119b1825287362957ad599060200160405180910390a250506001606555565b336105476106eb565b6001600160a01b03161461056d5760405162461bcd60e51b81526004016102c7906116cc565b6105776000610e9c565b565b6000610586609b83610eee565b92915050565b336105956106eb565b6001600160a01b0316146105bb5760405162461bcd60e51b81526004016102c7906116cc565b60005b81518110156106e7576000609a60008484815181106105ed57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002090506001600281111561063857634e487b7160e01b600052602160045260246000fd5b600382015460ff16600281111561065f57634e487b7160e01b600052602160045260246000fd5b14156106d45760038101805460ff19166002179055825183908390811061069657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f8bbf1861fd29297756bc2ec1496a157359ea7fda5746df5233b4fc3e8124511860405160405180910390a25b50806106df816118b2565b9150506105be565b5050565b6033546001600160a01b031690565b336107036106eb565b6001600160a01b0316146107295760405162461bcd60e51b81526004016102c7906116cc565b6002606554141561074c5760405162461bcd60e51b81526004016102c79061174c565b60026065556107656001600160a01b0384168383610e4a565b816001600160a01b0316836001600160a01b031660008051602061190f8339815191528360405161079891815260200190565b60405180910390a35050600160655550565b336107b36106eb565b6001600160a01b0316146107d95760405162461bcd60e51b81526004016102c7906116cc565b600260655414156107fc5760405162461bcd60e51b81526004016102c79061174c565b600260655561080b8282610f01565b6040518181526001600160a01b0383169060009060008051602061190f8339815191529060200160405180910390a350506001606555565b3361084c6106eb565b6001600160a01b0316146108725760405162461bcd60e51b81526004016102c7906116cc565b60005b81518110156106e7576000609a60008484815181106108a457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002090506002808111156108ee57634e487b7160e01b600052602160045260246000fd5b600382015460ff16600281111561091557634e487b7160e01b600052602160045260246000fd5b141561098a5760038101805460ff19166001179055825183908390811061094c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167fb84ab42066834057600f08f7bc7564111d6f5c12497b99f98d02346aed682a1460405160405180910390a25b5080610995816118b2565b915050610875565b6001600160a01b0381166000908152609a602052604081206002810154829081906109cd575050805460006109e5565b82546002840154600093506109e2919061186f565b90505b6099544310610a0f578083600101546109fe919061186f565b610a089083611818565b9150610a6f565b6000609854609954610a21919061186f565b609854610a2e904361186f565b8560010154610a3d9190611850565b610a479190611830565b9050818111610a57576000610a61565b610a61828261186f565b610a6b9084611818565b9250505b509392505050565b6000610a83609b611017565b905090565b33610a916106eb565b6001600160a01b031614610ab75760405162461bcd60e51b81526004016102c7906116cc565b6001600160a01b038116610b1c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c7565b610b2581610e9c565b50565b600054610100900460ff16610b4f5760405162461bcd60e51b81526004016102c790611701565b610b57611021565b610577611048565b600054610100900460ff16610b865760405162461bcd60e51b81526004016102c790611701565b610577611078565b81518351148015610ba0575080518351145b610be95760405162461bcd60e51b815260206004820152601a602482015279092dcccdee4dac2e8d2dedc40c2e4d2e8f240dad2e6dac2e8c6d60331b60448201526064016102c7565b60005b8351811015610e445760006040518060800160405280848481518110610c2257634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001858481518110610c4f57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020016000815260200160016002811115610c8457634e487b7160e01b600052602160045260246000fd5b815250905080609a6000878581518110610cae57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836002811115610d2c57634e487b7160e01b600052602160045260246000fd5b0217905550905050610d6f858381518110610d5757634e487b7160e01b600052603260045260246000fd5b6020026020010151609b6110a690919063ffffffff16565b50848281518110610d9057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03167f0786a211633682dd779567f71dd366c8e97f69c9893ef8fdfa9cd2414680c25b858481518110610de257634e487b7160e01b600052603260045260246000fd5b6020026020010151858581518110610e0a57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051610e29929190918252602082015260400190565b60405180910390a25080610e3c816118b2565b915050610bec565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103879084906110bb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610efa838361118d565b9392505050565b80471015610f515760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102c7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f9e576040519150601f19603f3d011682016040523d82523d6000602084013e610fa3565b606091505b50509050806103875760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b60648201526084016102c7565b6000610586825490565b600054610100900460ff166105775760405162461bcd60e51b81526004016102c790611701565b600054610100900460ff1661106f5760405162461bcd60e51b81526004016102c790611701565b61057733610e9c565b600054610100900460ff1661109f5760405162461bcd60e51b81526004016102c790611701565b6001606555565b6000610efa836001600160a01b0384166111c5565b6000611110826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112149092919063ffffffff16565b805190915015610387578080602001905181019061112e919061155d565b6103875760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102c7565b60008260000182815481106111b257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b600081815260018301602052604081205461120c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610586565b506000610586565b6060611223848460008561122b565b949350505050565b60608247101561128c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102c7565b843b6112da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102c7565b600080866001600160a01b031685876040516112f6919061167d565b60006040518083038185875af1925050503d8060008114611333576040519150601f19603f3d011682016040523d82523d6000602084013e611338565b606091505b5091509150611348828286611353565b979650505050505050565b60608315611362575081610efa565b8251156113725782518084602001fd5b8160405162461bcd60e51b81526004016102c79190611699565b600082601f83011261139c578081fd5b813560206113b16113ac836117f5565b6117c5565b80838252828201915082860187848660051b89010111156113d0578586fd5b855b858110156113f75781356113e5816118f9565b845292840192908401906001016113d2565b5090979650505050505050565b600082601f830112611414578081fd5b813560206114246113ac836117f5565b80838252828201915082860187848660051b8901011115611443578586fd5b855b858110156113f757813584529284019290840190600101611445565b600060208284031215611472578081fd5b8135610efa816118f9565b6000806040838503121561148f578081fd5b823561149a816118f9565b946020939093013593505050565b6000602082840312156114b9578081fd5b81356001600160401b038111156114ce578182fd5b6112238482850161138c565b6000806000606084860312156114ee578081fd5b83356001600160401b0380821115611504578283fd5b6115108783880161138c565b94506020860135915080821115611525578283fd5b61153187838801611404565b93506040860135915080821115611546578283fd5b5061155386828701611404565b9150509250925092565b60006020828403121561156e578081fd5b81518015158114610efa578182fd5b600080600060608486031215611591578283fd5b833561159c816118f9565b925060208401356115ac816118f9565b929592945050506040919091013590565b60008060008060008060c087890312156115d5578182fd5b86356115e0816118f9565b9550602087013594506040870135935060608701356001600160401b0380821115611609578384fd5b6116158a838b0161138c565b9450608089013591508082111561162a578384fd5b6116368a838b01611404565b935060a089013591508082111561164b578283fd5b5061165889828a01611404565b9150509295509295509295565b600060208284031215611676578081fd5b5035919050565b6000825161168f818460208701611886565b9190910192915050565b60208152600082518060208401526116b8816040850160208701611886565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b848152602081018490526040810183905260808101600383106117b657634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b604051601f8201601f191681016001600160401b03811182821017156117ed576117ed6118e3565b604052919050565b60006001600160401b0382111561180e5761180e6118e3565b5060051b60200190565b6000821982111561182b5761182b6118cd565b500190565b60008261184b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561186a5761186a6118cd565b500290565b600082821015611881576118816118cd565b500390565b60005b838110156118a1578181015183820152602001611889565b83811115610e445750506000910152565b60006000198214156118c6576118c66118cd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b2557600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122005bd2572ba93f8d23502a91e3b30900682d379fc0fd4abbf5e0d3a48e9e166a264736f6c63430008040033";

export class VestingImplementation__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingImplementation> {
    return super.deploy(overrides || {}) as Promise<VestingImplementation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VestingImplementation {
    return super.attach(address) as VestingImplementation;
  }
  connect(signer: Signer): VestingImplementation__factory {
    return super.connect(signer) as VestingImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingImplementationInterface {
    return new utils.Interface(_abi) as VestingImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VestingImplementation;
  }
}
