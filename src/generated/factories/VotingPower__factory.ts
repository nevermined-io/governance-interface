/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VotingPower, VotingPowerInterface } from "../VotingPower";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVotingPower",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "votingPower",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200142d3803806200142d8339810160408190526200003491620000f7565b80516200004990600090602084019062000051565b505062000220565b8280546200005f90620001cd565b90600052602060002090601f016020900481019282620000835760008555620000ce565b82601f106200009e57805160ff1916838001178555620000ce565b82800160010185558215620000ce579182015b82811115620000ce578251825591602001919060010190620000b1565b50620000dc929150620000e0565b5090565b5b80821115620000dc5760008155600101620000e1565b600060208083850312156200010a578182fd5b82516001600160401b038082111562000121578384fd5b818501915085601f83011262000135578384fd5b8151818111156200014a576200014a6200020a565b604051601f8201601f19908116603f011681019083821181831017156200017557620001756200020a565b8160405282815288868487010111156200018d578687fd5b8693505b82841015620001b0578484018601518185018701529285019262000191565b82841115620001c157868684830101525b98975050505050505050565b600181811c90821680620001e257607f821691505b602082108114156200020457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6111fd80620002306000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b457806320606b70146100d2578063587cde1e146100f55780635c19a95c14610136578063671b37931461014b5780636fcfff4514610170578063782d6fe1146101ab5780637ecebe00146101be578063b4b5ea57146101de578063c07473f6146101f1578063c3cda52014610223578063e7a324dc14610236578063f1127ed81461024b575b600080fd5b6100bc6102b2565b6040516100c99190610f8a565b60405180910390f35b6100e760008051602061110883398151915281565b6040519081526020016100c9565b61011e610103366004610e10565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100c9565b610149610144366004610e10565b610344565b005b6001546001600160601b03165b6040516001600160601b0390911681526020016100c9565b61019661017e366004610e10565b60056020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016100c9565b6101586101b9366004610e2a565b610351565b6100e76101cc366004610e10565b60066020526000908152604090205481565b6101586101ec366004610e10565b6105dd565b6101586101ff366004610e10565b6001600160a01b03166000908152600260205260409020546001600160601b031690565b610149610231366004610e53565b61065b565b6100e760008051602061112883398151915281565b61028e610259366004610eb1565b600460209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b039091166020830152016100c9565b6060600080546102c19061109b565b80601f01602080910402602001604051908101604052809291908181526020018280546102ed9061109b565b801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b5050505050905090565b61034e338261090a565b50565b60004382106103b65760405162461bcd60e51b815260206004820152602660248201527f556e693a3a6765745072696f72566f7465733a206e6f742079657420646574656044820152651c9b5a5b995960d21b60648201526084015b60405180910390fd5b6001600160a01b03831660009081526005602052604090205463ffffffff16806103e45760009150506105d7565b6001600160a01b03841660009081526004602052604081208491610409600185611056565b63ffffffff9081168252602082019290925260400160002054161161047c576001600160a01b03841660009081526004602052604081209061044c600184611056565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b031691506105d79050565b6001600160a01b038416600090815260046020908152604080832083805290915290205463ffffffff168310156104b75760009150506105d7565b6000806104c5600184611056565b90505b8163ffffffff168163ffffffff16111561059757600060026104ea8484611056565b6104f49190611027565b6104fe9083611056565b6001600160a01b038816600090815260046020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b03169181019190915291925087141561056b576020015194506105d79350505050565b805163ffffffff1687111561058257819350610590565b61058d600183611056565b92505b50506104c8565b506001600160a01b038516600090815260046020908152604080832063ffffffff909416835292905220546001600160601b03600160201b909104169150505b92915050565b6001600160a01b03811660009081526005602052604081205463ffffffff1680610608576000610654565b6001600160a01b03831660009081526004602052604081209061062c600184611056565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b9392505050565b6000600080516020611108833981519152600060405161067b9190610eef565b604051809103902061068a4690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a08301825280519084012060008051602061112883398151915260c08401526001600160a01b038b1660e084015261010083018a90526101208084018a90528251808503909101815261014084019092528151919093012061190160f01b610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa1580156107a4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108155760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a20696e76616c6964207369676e604482015264617475726560d81b60648201526084016103ad565b6001600160a01b0381166000908152600660205260408120805491610839836110d6565b9190505589146108955760405162461bcd60e51b815260206004820152602160248201527f556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e636044820152606560f81b60648201526084016103ad565b874211156108f35760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a207369676e61747572652065786044820152641c1a5c995960da1b60648201526084016103ad565b6108fd818b61090a565b505050505b505050505050565b6001600160a01b03808316600081815260036020818152604080842080546002845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461098e828483610994565b50505050565b816001600160a01b0316836001600160a01b0316141580156109bf57506000816001600160601b0316115b15610b40576001600160a01b03831615610a84576001600160a01b03831660009081526005602052604081205463ffffffff1690816109ff576000610a4b565b6001600160a01b038516600090815260046020526040812090610a23600185611056565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b90506000610a7282856040518060600160405280602781526020016111a160279139610b45565b9050610a8086848484610b8f565b5050505b6001600160a01b03821615610b40576001600160a01b03821660009081526005602052604081205463ffffffff169081610abf576000610b0b565b6001600160a01b038416600090815260046020526040812090610ae3600185611056565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b90506000610b32828560405180606001604052806026815260200161114860269139610d78565b905061090285848484610b8f565b505050565b6000836001600160601b0316836001600160601b031611158290610b7c5760405162461bcd60e51b81526004016103ad9190610f8a565b50610b87838561107b565b949350505050565b6000610bb34360405180606001604052806033815260200161116e60339139610dc5565b905060008463ffffffff16118015610c0d57506001600160a01b038516600090815260046020526040812063ffffffff831691610bf1600188611056565b63ffffffff908116825260208201929092526040016000205416145b15610c7b576001600160a01b03851660009081526004602052604081208391610c37600188611056565b63ffffffff168152602081019190915260400160002080546001600160601b0392909216600160201b02600160201b600160801b0319909216919091179055610d23565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000908152600482528681208b8616825290915294909420925183549451909116600160201b026001600160801b0319909416911617919091179055610cf2846001610fdd565b6001600160a01b0386166000908152600560205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600080610d858486611005565b9050846001600160601b0316816001600160601b031610158390610dbc5760405162461bcd60e51b81526004016103ad9190610f8a565b50949350505050565b600081600160201b8410610dec5760405162461bcd60e51b81526004016103ad9190610f8a565b509192915050565b80356001600160a01b0381168114610e0b57600080fd5b919050565b600060208284031215610e21578081fd5b61065482610df4565b60008060408385031215610e3c578081fd5b610e4583610df4565b946020939093013593505050565b60008060008060008060c08789031215610e6b578182fd5b610e7487610df4565b95506020870135945060408701359350606087013560ff81168114610e97578283fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215610ec3578182fd5b610ecc83610df4565b9150602083013563ffffffff81168114610ee4578182fd5b809150509250929050565b600080835482600182811c915080831680610f0b57607f831692505b6020808410821415610f2b57634e487b7160e01b87526022600452602487fd5b818015610f3f5760018114610f5057610f7c565b60ff19861689528489019650610f7c565b60008a815260209020885b86811015610f745781548b820152908501908301610f5b565b505084890196505b509498975050505050505050565b6000602080835283518082850152825b81811015610fb657858101830151858201604001528201610f9a565b81811115610fc75783604083870101525b50601f01601f1916929092016040019392505050565b600063ffffffff808316818516808303821115610ffc57610ffc6110f1565b01949350505050565b60006001600160601b03828116848216808303821115610ffc57610ffc6110f1565b600063ffffffff8084168061104a57634e487b7160e01b83526012600452602483fd5b92169190910492915050565b600063ffffffff83811690831681811015611073576110736110f1565b039392505050565b60006001600160601b0383811690831681811015611073576110736110f1565b600181811c908216806110af57607f821691505b602082108114156110d057634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156110ea576110ea6110f1565b5060010190565b634e487b7160e01b600052601160045260246000fdfe8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773a2646970667358221220d83906ad905079922bf8760e5220d8352f673d700502add887ba1b85a8b42f5f64736f6c63430008040033";

export class VotingPower__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingPower> {
    return super.deploy(name_, overrides || {}) as Promise<VotingPower>;
  }
  getDeployTransaction(
    name_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, overrides || {});
  }
  attach(address: string): VotingPower {
    return super.attach(address) as VotingPower;
  }
  connect(signer: Signer): VotingPower__factory {
    return super.connect(signer) as VotingPower__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingPowerInterface {
    return new utils.Interface(_abi) as VotingPowerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingPower {
    return new Contract(address, _abi, signerOrProvider) as VotingPower;
  }
}
